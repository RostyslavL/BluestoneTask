{"version":3,"sources":["components/Header.js","components/Footer.js","components/Product.js","components/Loader.js","constants/productConstants.js","actions/productActions.js","components/Message.js","screens/HomeScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProductScreen.js","constants/cartConstants.js","actions/cartActions.js","screens/CartScreen.js","App.js","reportWebVitals.js","store.js","reducers/productReducers.js","reducers/cartReducer.js","index.js"],"names":["Header","Navbar","bg","variant","expand","collapseOnSelect","src","width","height","className","alt","Container","to","Brand","Toggle","Collapse","id","Nav","Link","Footer","Row","Col","Product","product","countInStock","Object","values","images","length","map","img","url","flatMap","Card","name","toUpperCase","Img","Body","Title","as","_id","Button","type","disabled","Loader","Spinner","animation","size","role","style","margin","display","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","dataUrl","Message","children","Alert","Heading","defaultProps","HomeScreen","productList","useSelector","state","loading","error","products","dispatch","useDispatch","useEffect","a","axios","get","data","payload","responce","message","sm","md","lg","xlg","FormContainer","xs","LoginScreen","useState","email","setEmail","password","setPassword","Form","onSubmit","e","preventDefault","Group","controlId","Label","Control","placeholder","value","onChange","target","block","RegisterScreen","location","history","setName","confirmPassword","setConfirmPassword","ProductScreen","match","productDetails","params","response","open","setOpen","qty","setQty","Image","fluid","ListGroup","Item","number","onClick","in","description","Array","keys","x","push","CART_ADD_ITEM","CART_REMOVE_ITEM","addToCart","getState","localStorage","setItem","JSON","stringify","cart","cartItems","CartScreen","productID","search","Number","split","removeFromCartandler","removeFromCart","item","rounded","price","custom","reduce","acc","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","existItem","find","filter","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db392b8c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Navbar, Nav, Container } from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <Navbar \r\n                bg=\"dark\" \r\n                variant=\"dark\" \r\n                expand=\"lg\" \r\n                collapseOnSelect>\r\n                <img\r\n                    src=\"/img/nav_logo.png\"\r\n                    width=\"40\"\r\n                    height=\"40\"\r\n                    className=\"d-inline-block align-top \"\r\n                    alt=\"nav-logo\"\r\n                    />\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>Web App For BlueStone</Navbar.Brand>\r\n                    </LinkContainer>    \r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"ml-auto\">\r\n                        <LinkContainer to='/cart'>\r\n                            <Nav.Link> \r\n                                <i className=\"fas fa-shopping-cart\"></i> Cart \r\n                            </Nav.Link>\r\n                        </LinkContainer>\r\n                        <LinkContainer to='/login'>\r\n                            <Nav.Link>\r\n                                <i className=\"fas fa-user\"></i> Sign In \r\n                            </Nav.Link>\r\n                        </LinkContainer>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'> \r\n                        Copyright &copy; by RL for Bluestone Task\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport {Card,Button, } from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Product = ({product}) => {\r\n\r\n    const countInStock = Object.values(product.images)\r\n\r\n    return (\r\n    <>\r\n        {product.images.length > 0 ?\r\n            Object.values(product.images).map((img) => img.url).flatMap((src) =>\r\n                <Card className=\"my-3 p-4 rounded\">\r\n                     <h1><strong>{product.name.toUpperCase()}</strong></h1>\r\n                       <Card.Img src={src} variant=\"top\" /> \r\n                    <Card.Body>                \r\n                            <Card.Title as=\"div\">\r\n                            <Link to={`/products/${product._id}`}>\r\n                                <strong>{product.name.toUpperCase()}</strong>\r\n                            </Link>\r\n                                <hr/>\r\n                                <Link to={`/products/${product._id}`}>\r\n                                    <Button  className='btn-block btn-dark '\r\n                                        type='button'\r\n                                        disabled={countInStock === 0}\r\n                                    > Go To &nbsp;\r\n                                    <i className=\"fas fa-arrow-alt-circle-right\"/>\r\n                                    </Button>\r\n                                </Link>\r\n                            </Card.Title>\r\n                    </Card.Body>\r\n                </Card>\r\n            )\r\n            :\r\n            (\r\n                <Card className=\"my-3 p-4 rounded\">\r\n                    <h1><strong>{Object.values(product.images).length === 0  ? 'No Avialable' : product.name.toUpperCase() }</strong></h1>\r\n                       <Card.Img src='./img/sample.jpg' variant=\"top\" /> \r\n                    <Card.Body>                \r\n                            <Card.Title as=\"div\">                        \r\n                                <strong>{product.name.toUpperCase()}</strong>\r\n                                <hr/>\r\n                                    <Button  className='btn-block btn-dark '\r\n                                        type='button'\r\n                                        disabled={true}\r\n                                    > Go To &nbsp;\r\n                                    <i className=\"fas fa-arrow-alt-circle-right\"/>\r\n                                    </Button>\r\n                            </Card.Title>\r\n                    </Card.Body>\r\n                </Card>\r\n            )}\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Product\r\n\r\n\r\n","import React from 'react'\r\nimport {Spinner} from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner \r\n            animation='border'\r\n            // animation=\"grow\" \r\n            size=\"xlg\"\r\n            role='status'\r\n            style={{\r\n                width:'100px' , \r\n                height:'100px', \r\n                margin: 'auto', \r\n                display: 'block' \r\n            }}\r\n            >\r\n            <span className='sr-only'> Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL    = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL    = 'PRODUCT_DETAILS_FAIL'","import {\r\n    PRODUCT_LIST_REQUEST, \r\n    PRODUCT_LIST_SUCCESS, \r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL ,  \r\n} from '../constants/productConstants.js'\r\nimport axios from 'axios'\r\n\r\nconst dataUrl =  'http://localhost:8000'\r\n\r\nexport const listProducts = () => async (dispatch) =>{\r\n    try {\r\n        dispatch({type: PRODUCT_LIST_REQUEST })\r\n\r\n        const {data} = await axios.get(`${dataUrl}/products`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.responce && error.responce.data.message \r\n            ? error.responce.data.message \r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n  \r\n      const {data} = await axios.get(`${dataUrl}/products/${id}`)\r\n       \r\n      dispatch({\r\n        type: PRODUCT_DETAILS_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_DETAILS_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }","import React from 'react'\r\nimport {Alert} from 'react-bootstrap'\r\n\r\nconst Message = ({variant, children}) => {\r\n\r\n    return (\r\n        <Alert variant={variant}>\r\n          <Alert.Heading> <h2> {variant} </h2> </Alert.Heading>\r\n          <hr />\r\n            <p className=\"mb-0\">\r\n                {children} \r\n            </p>\r\n        </Alert>\r\n    )\r\n\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n    \r\nexport default Message\r\n\r\n\r\n","import React , { useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { Row , Col} from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport Loader from '../components/Loader';\r\nimport { listProducts } from '../actions/productActions'\r\nimport Message from '../components/Message'\r\n\r\nconst HomeScreen = () => {\r\n    \r\n    const productList = useSelector(state => state.productList)\r\n    const {loading, error, products } = productList\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(()=>{\r\n        dispatch(listProducts())\r\n    },[dispatch])\r\n\r\n    return (\r\n        <>\r\n            <h1>Products</h1>\r\n                {loading ? \r\n                (<Loader />) :\r\n                 error ? \r\n                ( <Message variant=\"danger\">{error}</Message>)  : \r\n                (\r\n                <Row>\r\n                    {products && products.length > 0 &&  products.map((product)=>(\r\n\r\n                        <Col\r\n                            key={product._id}\r\n                            sm={8}\r\n                            md={6}\r\n                            lg={4}\r\n                            xlg={3}\r\n                            >\r\n                            <Product product={product}/>\r\n                        </Col>\r\n                    ))}\r\n                    </Row>)\r\n                }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col, } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer","import React, {useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n    Form, \r\n    Button, \r\n    Row, \r\n    Col\r\n} from 'react-bootstrap'\r\n\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nconst LoginScreen = () => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n    }\r\n\r\n    return (\r\n    <>    \r\n        <Link className='btn btn-dark btn-sm my-3' to='/'>\r\n            <i className=\"fas fa-arrow-alt-circle-left\"> Go Back To Home Page</i>\r\n        </Link>\r\n        <FormContainer>\r\n       <h1>Sign In</h1>\r\n        <Form onSubmit={submitHandler} >\r\n         <Form.Group controlId='email'  >\r\n           <Form.Label>Email Address</Form.Label>\r\n           <Form.Control\r\n             type='email'\r\n             placeholder='Enter email'\r\n             value={email}\r\n             onChange={(e) => setEmail(e.target.value)}\r\n           ></Form.Control>\r\n         </Form.Group>\r\n         <Form.Group controlId='password'>\r\n           <Form.Label>Password</Form.Label>\r\n           <Form.Control\r\n             type='password'\r\n             placeholder='Enter password'\r\n             value={password}\r\n             onChange={(e) => setPassword(e.target.value)}\r\n           ></Form.Control>\r\n         </Form.Group>\r\n         <Button \r\n            type='submit' \r\n            variant='dark'\r\n            size='sm'\r\n            block\r\n            >\r\n           Sign In\r\n         </Button>\r\n       </Form>\r\n       <Row className='py-3'>\r\n         <Col>\r\n           New Customer?{' '}\r\n           <Link to={'/register'}>\r\n             Register\r\n           </Link>\r\n         </Col>\r\n       </Row> \r\n     </FormContainer>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n\r\n","import React, {useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n    Form, \r\n    Button, \r\n    Row, \r\n    Col\r\n} from 'react-bootstrap'\r\n\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n    }\r\n\r\nreturn (\r\n<>\r\n    <Link className='btn btn-dark btn-sm my-3' to='/'>\r\n        <i className=\"fas fa-arrow-alt-circle-left\"> Go Back To Home Page</i>\r\n    </Link>\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label> Name </Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter your user name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label> Confirm Password </Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm your password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button \r\n            type='submit' \r\n            variant='dark'\r\n            size='sm'\r\n            block\r\n            >\r\n           Register\r\n         </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account ? {' '}\r\n          <Link to={'/login'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n</>\r\n    \r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, \r\n    Col, \r\n    Image, \r\n    ListGroup, \r\n    Card, \r\n    Button, \r\n    Form ,\r\n    Collapse\r\n} from 'react-bootstrap'\r\n\r\n// import Data from '../data/data.json';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProductDetails } from '../actions/productActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n\r\nconst ProductScreen = ({history, match}) => {\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector((state) => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    useEffect(() =>{\r\n        dispatch(listProductDetails(match.params.id))\r\n    },[dispatch, match])\r\n\r\n    // const product_bak = product\r\n\r\n    const {images} = product\r\n    \r\n    const [open, setOpen] = useState(false)\r\n    const [qty, setQty] = useState(1)\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n      }\r\n\r\n    return (\r\n        <>\r\n        \r\n            <Link className='btn btn-dark btn-sm my-3' to='/'>\r\n                <i className=\"fas fa-arrow-alt-circle-left\"> Go Back </i>\r\n            </Link>\r\n                <h1>Product Name: {product.name}</h1>\r\n                <h2>Prouct ID : <b>{product._id}</b> </h2> \r\n            {loading ? (\r\n                <Loader />\r\n                ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n                ) : (\r\n                    <Row>\r\n                        <Col md={6}> \r\n                        {images ?\r\n                          Object.values(images).map((img) => img.url).flatMap((src) =>\r\n                             <Image src={src} alt={product.name} fluid />            \r\n                            )\r\n                            :(\r\n                              <Image src='sample.jpg' alt={product.name} fluid />            \r\n                            )\r\n                          } \r\n                        </Col>\r\n                        <Col md={3}>\r\n                          <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                              <h3> Product Name : </h3> <i>{product.name}</i>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                            <h3> Product Number :</h3> <i>{product.number}</i>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                    <Button\r\n                                        className=\"btn btn-dark btn-lg my-3\"\r\n                                        onClick={() => setOpen(!open)}\r\n                                        aria-controls=\"description-collapse-text\"\r\n                                        aria-expanded={open}\r\n                                    >\r\n                                        Description\r\n                                    </Button> \r\n                                    <Collapse in={open}>\r\n                                        <div id=\"description-collapse-text\">\r\n                                            <h4> \r\n                                                <i>\r\n                                                    {product.description} \r\n                                                </i>\r\n                                            </h4> \r\n                                        </div>\r\n                                        </Collapse> \r\n                                    </ListGroup.Item>\r\n                          </ListGroup>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                          <Card>\r\n                            <ListGroup variant='flush'>\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col>Status:</Col>\r\n                                  <Col>\r\n                                    {product.id > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                                  </Col>\r\n                                </Row>\r\n                              </ListGroup.Item>\r\n\r\n                              <ListGroup.Item>\r\n                                  <Row>\r\n                                    <Col>Qty</Col>\r\n                                    <Col>\r\n                                      <Form.Control\r\n                                        as='select'\r\n                                        value={qty}\r\n                                        onChange={(e) => setQty(e.target.value)}\r\n                                      >\r\n                                        {[...Array(product.id ).keys()].map(\r\n                                          (x) => (\r\n                                            <option key={x + 1} value={x + 1}>\r\n                                              {x + 1}\r\n                                            </option>\r\n                                          )\r\n                                        )}\r\n                                      </Form.Control>\r\n                                    </Col>\r\n                                  </Row>\r\n                                </ListGroup.Item>\r\n\r\n                              <ListGroup.Item>\r\n                                <Button\r\n                                  onClick={addToCartHandler}\r\n                                  className='btn-block btn-dark '\r\n                                  type='button'\r\n                                  disabled={product.id  === 0}\r\n                                >\r\n                                  Add To Cart\r\n                                </Button>\r\n                              </ListGroup.Item>\r\n                            </ListGroup>\r\n                          </Card>\r\n                        </Col>\r\n                    </Row>\r\n               )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'","import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM, \r\n}  from '../constants/cartConstants'\r\n\r\n\r\nconst dataUrl =  'http://localhost:8000'\r\n\r\nexport const addToCart = (id, qty) => async(dispatch, getState) =>{\r\n    \r\n    const {data} = await axios.get(`${dataUrl}/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            images: data.images,\r\n            number: data.number,\r\n            description: data.description,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\nexport const removeFromCart = (id) => (dispatch, getState) =>{\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload:id,\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n","import React , {useEffect,useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport { \r\n    Row, \r\n    Col, \r\n    ListGroup, \r\n    Image, \r\n    Form, \r\n    Button, \r\n    Collapse,\r\n    Card \r\n} from 'react-bootstrap'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location }) => {\r\n    \r\n    const productID = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    const { cartItems } = cart\r\n \r\n    useEffect(() => {\r\n        if(productID){\r\n            dispatch(addToCart(productID, qty))\r\n        }\r\n    }, [dispatch, productID, qty])\r\n\r\n    const removeFromCartandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n    const [open, setOpen] = useState(false)\r\n    \r\n    return(\r\n        <>\r\n        <Link className='btn btn-dark btn-sm my-3' to={`/products/${productID}`}>\r\n                <i className=\"fas fa-arrow-alt-circle-left\"> Go Back </i>\r\n            </Link>\r\n            <Row>\r\n            <Col md={8} >\r\n                <h1> Shopping Cart </h1>\r\n                { \r\n                    cartItems.length === 0 \r\n                    ? \r\n                    <Message variant=\"warning\"> \r\n                        Your Cart is Empty \r\n                            <Link to='/'> Go Back </Link>\r\n                    </Message> \r\n                    :\r\n                    (\r\n                        <ListGroup variant=\"fulsh\">\r\n                            { cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2} >\r\n                                        {item.images.map(img=>img.url).flatMap((src) =>\r\n                                            <Image src={src} alt={item.name} fluid rounded/>\r\n                                        )}\r\n                                        </Col>\r\n                                        \r\n                                        <Col md={3}>\r\n                                            <Link to={`/products/${item.product}`}> <h1><strong>{item.name.toUpperCase()}</strong></h1></Link>\r\n                                        </Col>\r\n                                        <Col md={2} >\r\n                                            $ {item.price}\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                                <Form.Control \r\n                                                    as=\"select\"\r\n                                                    size=\"md\"\r\n                                                    value={item.qty} \r\n                                                    custom\r\n                                                    \r\n                                                    onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                                                    {\r\n                                                        [...Array(item.countInStock).keys()].map((x) => (\r\n                                                            <option \r\n                                                                key={x + 1} \r\n                                                                value={x + 1}\r\n                                                            >\r\n                                                                {x + 1}\r\n                                                            </option>\r\n                                                        ))\r\n                                                    }    \r\n                                                </Form.Control> \r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                            <Button\r\n                                                type=\"button\"\r\n                                                variant=\"dark\"\r\n                                                onClick={() => removeFromCartandler(item.product)}\r\n                                            >\r\n                                                <i className=\"fas fa-trash\"  />\r\n                                            </Button>\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                        <Button\r\n                                        className=\"btn btn-dark btn-lg my-3\"\r\n                                        onClick={() => setOpen(!open)}\r\n                                        aria-controls=\"description-collapse-text\"\r\n                                        aria-expanded={open}\r\n                                    >\r\n                                        Description\r\n                                    </Button> \r\n                                    <Collapse in={open}>\r\n                                        <div id=\"description-collapse-text\">\r\n                                            <h4> \r\n                                                <i>\r\n                                                    {item.description} \r\n                                                </i>\r\n                                            </h4> \r\n                                        </div>\r\n                                        </Collapse> \r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )\r\n                }\r\n            </Col>\r\n\r\n            <Col md={4} >\r\n                <Card className=\"my-5\">\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2> Subtotal ({cartItems.reduce( (acc, item) => acc + item.qty, 0)}) items</h2> \r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react';\r\nimport {Container} from 'react-bootstrap';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProductScreen from './screens/ProductScreen'\r\nimport CartScreen from './screens/CartScreen'\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header/>\r\n      <main className=\"py-3\">\r\n          <Container>\r\n          <Route path='/' component={HomeScreen} exact></Route>\r\n          <Route path='/products/:id' component={ProductScreen}></Route>\r\n          <Route path='/login' component={LoginScreen}></Route>\r\n          <Route path='/register' component={RegisterScreen}></Route>\r\n          <Route path='/cart/:id?' component={CartScreen}></Route>\r\n          </Container>\r\n        </main>\r\n      <Footer/>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport {productListReducer,productDetailsReducer} from './reducers/productReducers'\r\nimport {cartReducer} from './reducers/cartReducer'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n})\r\n\r\n\r\nconst cartItemsFromStorage =  localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer, \r\n    initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n    )\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST, \r\n    PRODUCT_LIST_SUCCESS, \r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL ,  \r\n} from '../constants/productConstants.js'\r\n\r\n\r\nexport const productListReducer = (state = {products : [] }, action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading : true, products : []}\r\n         case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n              loading : false, \r\n              products: action.payload, \r\n            }\r\n         case PRODUCT_LIST_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (\r\n    state = { product: {} },\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case PRODUCT_DETAILS_REQUEST:\r\n        return { ...state, loading: true }\r\n      case PRODUCT_DETAILS_SUCCESS:\r\n        return { loading: false, product: action.payload }\r\n      case PRODUCT_DETAILS_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }","import { \r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM, \r\n} from '../constants/cartConstants'\r\n\r\nexport const  cartReducer = (state = {cartItems: []}, action) =>{\r\n    switch(action.type){\r\n        case CART_ADD_ITEM :\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find((x) => x.product === item.product)\r\n            if(existItem){\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) => x.product === existItem.product ? item: x)\r\n                }\r\n            }else{\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                } \r\n            }\r\n            case CART_REMOVE_ITEM :\r\n            return{\r\n                ...state,\r\n                cartItems: state.cartItems.filter( (x) => x.product !== action.payload),\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n    \r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}